{"version":3,"sources":["components/home/Banner.js","components/home/Home.js","components/form/ApplyForm.js","components/awards/Awards.js","components/common/SwitchLang.js","dist/img/logo.PNG","components/common/Navbar.js","dist/img/facebook.svg","dist/img/instagram.svg","dist/img/linkedin.svg","dist/img/twitter.svg","dist/img/youtube.svg","components/common/Footer.js","components/Routes.js","reportWebVitals.js","index.js"],"names":["Banner","Home","ApplyForm","formik","useFormik","initialValues","companyName","companyType","companyUrl","companyDescription","contactTitle","contactNo","emailAddress","awardList","callEntry","ContactName","CompanyLogo","AttachFile1","AttachFile2","validationSchema","Yup","required","min","max","email","test","value","size","includes","type","onSubmit","values","CompanyLogoFile","AttachFile1File","AttachFile2File","formData","FormData","append","axios","post","headers","then","res","console","log","catch","err","Container","Form","handleSubmit","Row","Col","Group","Label","Control","name","placeholder","onChange","handleChange","errors","touched","Text","className","xs","md","lg","as","event","setFieldValue","currentTarget","files","Button","variant","Awards","SwitchLang","lang","localStorage","getItem","onClick","setItem","window","location","reload","NavBar","url","useLocation","useState","isActive","setActive","addActiveClass","e","clicked","target","id","Navbar","expand","to","src","Logo","alt","Toggle","aria-controls","Collapse","pathname","toLowerCase","Nav","Footer","href","facebook","instagram","linkedin","twitter","youtube","Routes","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.422baadb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div>\r\n      Banner \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;","import React from 'react';\n\nimport Banner from './Banner';\n\nconst Home = () => {\n  return (\n    <Banner />\n  );\n};\n\nexport default Home;","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from 'axios'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\nexport default function ApplyForm() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        companyName: \"\",\r\n        companyType: \"\",\r\n        companyUrl: \"\",\r\n        companyDescription: \"\",\r\n        contactTitle: \"\",\r\n        contactNo: \"\",\r\n        emailAddress: \"\",\r\n        awardList: \"\",\r\n        callEntry: \"\",\r\n        ContactName: \"\",\r\n        CompanyLogo: \"\",\r\n        AttachFile1: \"\",\r\n        AttachFile2: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n        companyName: Yup.string()\r\n            //  .min(2, \"Mininum 2 characters\")\r\n            //  .max(15, \"Maximum 15 characters\")\r\n             .required(\"Required!\"),\r\n        companyType: Yup.string()\r\n            .required(\"Required!\"),\r\n        companyUrl: Yup.string()\r\n            .min(8, \"Minimum 8 characters\")\r\n            .required(\"Required!\"),\r\n        companyDescription: Yup.string()\r\n            .min(2, \"Mininum 2 characters\")\r\n            .max(15, \"Maximum 15 characters\")\r\n            .required(\"Required!\"),\r\n        contactTitle: Yup.string()\r\n            .required(\"Required!\"),\r\n        contactNo: Yup.string()\r\n            .required(\"Required!\"),\r\n        emailAddress: Yup.string()\r\n            .email(\"Invalid email format\")\r\n            .required(\"Required!\"),\r\n        awardList: Yup.string()\r\n            .required(\"Required!\"),\r\n        callEntry: Yup.string()\r\n            .required(\"Required!\"),\r\n        ContactName: Yup.string()\r\n            .required(\"Required!\"),\r\n        CompanyLogo: Yup.mixed()\r\n            .required(\"Required!\")\r\n            .test('fileSize', \"File is too large\", value => value ? value.size <= 999999999999999 : null)\r\n            .test('fileType', \"PDF Only\", value => value ? ['application/pdf'].includes(value.type) : null ),\r\n        AttachFile1: Yup.mixed()\r\n            .required(\"Required!\")\r\n            .test('fileSize', \"File is too large\", value => value ? value.size <= 999999999999999 : null)\r\n            .test('fileType', \"PDF Only\", value => value ? ['application/pdf'].includes(value.type) : null ),\r\n        AttachFile2: Yup.mixed()\r\n            .required(\"Required!\")\r\n            .test('fileSize', \"File is too large\", value => value ? value.size <= 999999999999999 : null)\r\n            .test('fileType', \"PDF Only\", value => value ? ['application/pdf'].includes(value.type) : null ),\r\n    }),\r\n    onSubmit: values => {\r\n        let CompanyLogoFile = values.CompanyLogo;\r\n        let AttachFile1File = values.AttachFile1;\r\n        let AttachFile2File = values.AttachFile2;\r\n        let formData = new FormData();\r\n        formData.append('CompanyLogo', CompanyLogoFile);\r\n        formData.append('AttachFile1', AttachFile1File);\r\n        formData.append('AttachFile2', AttachFile2File);\r\n\r\n        const options = {\r\n            headers: {\r\n                'Authorization': 'hkjmgfrdklytrslssadjyrmakeinssocmdynkg',\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n\r\n        axios.post(`http://89.189.232.130/api/Nomination/UploadNomination?\r\n            &companyName=${values.companyName}\r\n            &companyType=${values.companyType}\r\n            &companyUrl=${values.companyUrl}\r\n            &companyDescription=${values.companyDescription}\r\n            &contactTitle=${values.contactTitle}\r\n            &contactNo=${values.contactNo}\r\n            &emailAddress=${values.emailAddress}\r\n            &awardList=${values.awardList}\r\n            &callEntry=${values.callEntry}\r\n            &ContactName=${values.ContactName}`,\r\n        formData,\r\n        options)\r\n        .then(res => {\r\n             console.log('Res ',res)\r\n        })\r\n        .catch(err => {\r\n            console.log('Err ', err)\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n\r\n        <Row>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Company Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"companyName\"\r\n                        placeholder=\"Company Name\"\r\n                        value={formik.values.companyName}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.companyName && formik.touched.companyName ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.companyName}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Company Type</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"companyType\"\r\n                        placeholder=\"Company Type\"\r\n                        value={formik.values.companyType}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.companyType && formik.touched.companyType ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.companyType}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Company Url</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"companyUrl\"\r\n                        placeholder=\"Company Url\"\r\n                        value={formik.values.companyUrl}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.companyUrl && formik.touched.companyUrl ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.companyUrl}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col xs md lg=\"8\">\r\n                <Form.Group>\r\n                    <Form.Label>Company Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        name=\"companyDescription\"\r\n                        value={formik.values.companyDescription}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.companyDescription && formik.touched.companyDescription ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.companyDescription}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Contact Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"contactTitle\"\r\n                        placeholder=\"Contact Title\"\r\n                        value={formik.values.contactTitle}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.contactTitle && formik.touched.contactTitle ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.contactTitle}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Contact Number</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        name=\"contactNo\"\r\n                        placeholder=\"Contact Number\"\r\n                        value={formik.values.contactNo}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.contactNo && formik.touched.contactNo ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.contactNo}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        name=\"emailAddress\"\r\n                        placeholder=\"Email Address\"\r\n                        value={formik.values.emailAddress}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.emailAddress && formik.touched.emailAddress ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.emailAddress}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n            \r\n        <Row>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Award List</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"awardList\"\r\n                        value={formik.values.awardList}\r\n                        onChange={formik.handleChange}\r\n                    >\r\n                        <option>Chose Award</option>\r\n                        <option>test1</option>\r\n                        <option>test2</option>\r\n                    </Form.Control>\r\n                    {formik.errors.awardList && formik.touched.awardList ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.awardList}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Call Entry</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"callEntry\"\r\n                        placeholder=\"Call Entry\"\r\n                        value={formik.values.callEntry}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.callEntry && formik.touched.callEntry ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.callEntry}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Contact Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"ContactName\"\r\n                        placeholder=\"Contact Name\"\r\n                        value={formik.values.ContactName}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.ContactName && formik.touched.ContactName ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.ContactName}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Company Logo</Form.Label>\r\n                    <Form.Control\r\n                        type=\"file\"\r\n                        name=\"CompanyLogo\"\r\n                        placeholder=\"Company Logo\"\r\n                        onChange={(event) => {\r\n                            formik.setFieldValue(\"CompanyLogo\", event.currentTarget.files[0]);\r\n                        }}\r\n                    />\r\n                    {formik.errors.CompanyLogo && formik.touched.CompanyLogo ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.CompanyLogo}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Attach File 1</Form.Label>\r\n                    <Form.Control\r\n                        type=\"file\"\r\n                        name=\"AttachFile1\"\r\n                        placeholder=\"Attach File 1\"\r\n                        onChange={(event) => {\r\n                            formik.setFieldValue(\"AttachFile1\", event.currentTarget.files[0]);\r\n                        }}\r\n                    />\r\n                    {formik.errors.AttachFile1 && formik.touched.AttachFile1 ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.AttachFile1}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Attach File 2</Form.Label>\r\n                    <Form.Control\r\n                        type=\"file\"\r\n                        name=\"AttachFile2\"\r\n                        placeholder=\"Attach File 2\"\r\n                        onChange={(event) => {\r\n                            formik.setFieldValue(\"AttachFile2\", event.currentTarget.files[0]);\r\n                        }}\r\n                    />\r\n                    {formik.errors.AttachFile2 && formik.touched.AttachFile2 ? (\r\n                    <Form.Text className=\"text-muted\">{formik.errors.AttachFile2}</Form.Text>\r\n                    ) : ''}\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ApplyForm from '../form/ApplyForm'\n\nconst Awards = () => {\n  return (\n    <div>\n      <ApplyForm />\n    </div>\n  );\n};\n\nexport default Awards;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction SwitchLang() {\r\n  const lang = localStorage.getItem('lang');\r\n  const handleLang = () => {\r\n    if (lang === 'en') {\r\n        localStorage.setItem('lang', 'ar');\r\n    } else if (lang === 'ar') {\r\n        localStorage.setItem('lang', 'en');\r\n    } else {\r\n        localStorage.setItem('lang', 'ar');\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <Button className=\"switchLang\" onClick={() => handleLang()}>\r\n        {lang === 'ar' ? 'English' : 'عربي' }\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default SwitchLang;","export default __webpack_public_path__ + \"static/media/logo.fb2ef52f.PNG\";","import React, {useState} from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport SwitchLang from './SwitchLang';\r\nimport Logo from '../../dist/img/logo.PNG';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst lang = localStorage.getItem('lang');\r\n\r\nconst NavBar = () => {\r\n  const location = useLocation();\r\n\r\n  const isCurrentURL = (url) => {\r\n      return location.pathname.toLowerCase() === url.toLowerCase();\r\n  }\r\n  \r\n  const [isActive, setActive] = useState('home');\r\n\r\n  const addActiveClass = (e) => {\r\n      const clicked = e.target.id\r\n      if(isActive === clicked) {\r\n        setActive('');\r\n      } else {\r\n        setActive(clicked);\r\n     }\r\n  }\r\n    \r\n\r\n\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n      <Container>\r\n        <Link className=\"navbar-brand\" to=\"/Home\">\r\n          <img src={Logo} alt=\"logo\" />\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          { isCurrentURL('/Home') ? \r\n          <Nav className=\"mr-auto\">\r\n            <Link\r\n              className={isActive === \"home\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Home\"\r\n              id=\"home\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n\r\n              {lang === 'ar' ? 'الرئيسية' : 'Home' }\r\n            </Link>\r\n            <Link\r\n              className={isActive === \"about\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Home\"\r\n              id=\"about\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n\r\n              {lang === 'ar' ? 'عنا' : 'About' }\r\n            </Link>\r\n            <Link\r\n              className={isActive === \"aims\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Home\"\r\n              id=\"aims\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n\r\n              {lang === 'ar' ? 'الغايات والأهداف' : 'Aims and Objective' }\r\n            </Link>\r\n            <Link\r\n              className={isActive === \"judge\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Home\"\r\n              id=\"judge\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n\r\n              {lang === 'ar' ? 'لجنة التحكيم' : 'Judge Panel' }\r\n            </Link>\r\n            <Link\r\n              className={isActive === \"awards\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Awards\"\r\n              id=\"awards\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n              {lang === 'ar' ? 'الجوائز' : 'Awards' }\r\n            </Link>\r\n          </Nav>\r\n          :\r\n          <Nav className=\"mr-auto\">\r\n            <Link\r\n              className={isActive === \"home\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Home\"\r\n              id=\"home\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n              {lang === 'ar' ? 'الرئيسية' : 'Home' }\r\n            </Link>\r\n            <Link\r\n              className={isActive === \"awards\"? 'nav-link active-link': 'nav-link'}\r\n              to=\"/Awards\"\r\n              id=\"awards\"\r\n              onClick={e => addActiveClass(e)}\r\n            >\r\n              {lang === 'ar' ? 'الجوائز' : 'Awards' }\r\n            </Link>\r\n          </Nav> \r\n          }\r\n        </Navbar.Collapse>\r\n        <SwitchLang />\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/facebook.566a037a.svg\";","export default __webpack_public_path__ + \"static/media/instagram.887c756d.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.a58c9e81.svg\";","export default __webpack_public_path__ + \"static/media/twitter.a5ab094f.svg\";","export default __webpack_public_path__ + \"static/media/youtube.819355e9.svg\";","import React from 'react';\r\nimport facebook from '../../dist/img/facebook.svg';\r\nimport instagram from '../../dist/img/instagram.svg';\r\nimport linkedin from '../../dist/img/linkedin.svg';\r\nimport twitter from '../../dist/img/twitter.svg';\r\nimport youtube from '../../dist/img/youtube.svg';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h4>About Us</h4>\r\n            <p>Council of Cooperative Health Insurance</p>\r\n            <p>The General Secretariat</p>\r\n          </Col>\r\n          <Col>\r\n            <h4>legal</h4>\r\n            <a href=\"#0\">\r\n              Terms & Conditions\r\n            </a>\r\n          </Col>\r\n          <Col>\r\n            <h4>Follow Us</h4>\r\n            <ul>\r\n              <li>\r\n                <a href=\"#0\" >\r\n                  <img src={facebook} alt=\"social\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#0\" >\r\n                  <img src={instagram} alt=\"social\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#0\" >\r\n                  <img src={linkedin} alt=\"social\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#0\" >\r\n                  <img src={twitter} alt=\"social\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#0\" >\r\n                  <img src={youtube} alt=\"social\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"copyRight\">\r\n        <Container>\r\n          Copyright: Council of Cooperative Health Insurance 2021. All Rights Reserved\r\n        </Container>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport Home from './home/Home';\nimport Awards from './awards/Awards';\nimport NavBar from './common/Navbar';\nimport Footer from './common/Footer';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nexport const Routes = () => {\n  return (\n    <div>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/Home\" component={Home} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/Home\" />\n        </Route>\n        <Route exact path=\"/Awards\" component={Awards} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from './components/Routes'; // where we are going to specify our routes\nimport reportWebVitals from './reportWebVitals';\nif (localStorage.getItem('lang') === 'ar') {\n  require('./dist/css/style-ar.scss');\n} else {\n  require('./dist/css/style-en.scss');\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}